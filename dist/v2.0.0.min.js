/*! @License MIT | Copyright (c) 2022 hlop3z */
var xtyle = (() => {
  var v = Object.defineProperty;
  var q = Object.getOwnPropertyDescriptor;
  var Q = Object.getOwnPropertyNames;
  var H = Object.prototype.hasOwnProperty;
  var J = (n, t) => {
      for (var e in t) v(n, e, { get: t[e], enumerable: !0 });
    },
    Y = (n, t, e, r) => {
      if ((t && typeof t == "object") || typeof t == "function")
        for (let i of Q(t))
          !H.call(n, i) &&
            i !== e &&
            v(n, i, {
              get: () => t[i],
              enumerable: !(r = q(t, i)) || r.enumerable,
            });
      return n;
    };
  var Z = (n) => Y(v({}, "__esModule", { value: !0 }), n);
  var $t = {};
  J($t, { default: () => yt });
  function P(n, ...t) {
    return (
      t.forEach((e) => {
        for (let r in e)
          e[r] instanceof Object
            ? (n[r] || Object.assign(n, { [r]: {} }), P(n[r], e[r]))
            : Object.assign(n, { [r]: e[r] });
      }),
      n
    );
  }
  function R(n, t, e = !1) {
    return P(e ? Object.assign({}, n) : n, t);
  }
  function A(n, t) {
    if (n === t) return !0;
    if (
      typeof n != "object" ||
      n === null ||
      typeof t != "object" ||
      t === null
    )
      return !1;
    let e = Object.keys(n),
      r = Object.keys(t);
    if (e.length !== r.length) return !1;
    for (let i of e) if (!r.includes(i) || !A(n[i], t[i])) return !1;
    return !0;
  }
  function B(n, t) {
    let e = Object.assign({}, n);
    t(e);
    let r = R(n, e, !0),
      i = A(n, r);
    return { data: r, update: !i };
  }
  var x = class {
    constructor(t) {
      let e = { ...t };
      (this.original = e), (this.current = e), (this.vdom = null);
    }
    get state() {
      return this.current;
    }
    set state(t) {
      this.update(t);
    }
    update(t) {
      let { data: e, update: r } = B(this.current, t);
      r && ((this.current = e), this.vdom && this.vdom.render());
    }
    reset() {
      this.current = this.original;
    }
  };
  function N(n, t) {
    return new x(n, t);
  }
  var $ = { model: N, produce: B, compare: A, merge: R };
  function S(n, t) {
    if (!n) return t;
    if (!t) return n.remove(), null;
    if (n.key !== t.key || tt(n, t) || n.tagName !== t.tagName)
      return n.replaceWith(t), t;
    let e = n.attributes,
      r = t.attributes,
      i = et(e, r);
    for (let a = 0; a < i.length; a++) {
      let c = i[a];
      n.setAttribute(c.name, c.value);
    }
    return rt(n, t), n;
  }
  function tt(n, t) {
    return n.textContent !== t.textContent;
  }
  function et(n, t) {
    let e = [];
    if (n)
      for (let r = 0; r < t.length; r++) {
        let i = t[r],
          a = n.getNamedItem(i.name);
        (!a || a.value !== i.value) && e.push({ name: i.name, value: i.value });
      }
    return e;
  }
  function rt(n, t) {
    let e = Array.from(n.childNodes),
      r = Array.from(t.childNodes);
    for (let i = 0; i < r.length || i < e.length; i++) {
      let a = r[i],
        c = e[i],
        s = S(c, a);
      s && !n.contains(s) && n.appendChild(s);
    }
  }
  var I = S;
  var nt = [
    "click",
    "dblclick",
    "mousedown",
    "mouseup",
    "contextmenu",
    "mouseout",
    "mousewheel",
    "mouseover",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "keydown",
    "keyup",
    "keypress",
    "focus",
    "blur",
    "change",
    "submit",
    "resize",
    "scroll",
    "hashchange",
  ];
  function D(n, t, e) {
    let r = document.createElement(n);
    function i(a = null) {
      let c = {};
      for (let s in t) {
        if (s === "show" && t[s] === !1) return (r.hidden = !0), r;
        if (s !== "key" && s !== "show")
          if (s.startsWith("@")) {
            let o = s.slice(1);
            nt.includes(o) && r.addEventListener(o, t[s]);
          } else
            s === "class"
              ? Array.isArray(t[s])
                ? r.setAttribute(s, t[s].join(" "))
                : t[s] && r.setAttribute(s, t[s])
              : r.setAttribute(s, t[s]);
      }
      return (
        Array.isArray(e) || (e = [e]),
        e.forEach((s) => {
          s &&
            (s instanceof d
              ? ((s.$root = r), (s.$parent = a), r.appendChild(s.render()))
              : typeof s == "object"
              ? r.appendChild(D(...s)())
              : r.appendChild(document.createTextNode(s)));
        }),
        r
      );
    }
    return i;
  }
  var V = D;
  function X(n, t) {
    if (typeof n == "string") {
      let e = document.querySelector(n),
        r = t.render();
      (t.$el = r), e.appendChild(r);
    } else {
      let e = t.render();
      (t.$el = e), n.appendChild(e);
    }
  }
  var d = class {
      constructor(t) {
        (this.$el = null), (this.$root = null), (this.$parent = null);
        let { admin: e, component: r, internalObject: i, init: a } = t;
        (this.__dict__ = e),
          (e.vdom = this),
          Object.defineProperty(i, "$el", { get: () => this.$el }),
          Object.defineProperty(i, "$parent", { get: () => this.$parent }),
          Object.defineProperty(i, "$gui", {
            get: () => window.$____XPRIVATEDICTX____$.components,
          }),
          Object.defineProperty(i, "$ui", {
            get: () => window.$____XPRIVATEDICTX____$,
          }),
          Object.keys(r.sync).forEach((s) => {
            let o = r.sync[s];
            Object.defineProperty(i, s, {
              get: () => this.$parent.data[o],
              set: (h) => {
                this.$parent.data = (u) => {
                  u[o] = h;
                };
              },
            });
          }),
          (i.$emit = (s, o = null) => {
            if (this.$parent)
              if (s.startsWith("update:")) {
                let [h, u] = s.split(":");
                this.$parent.data = (l) => {
                  l[u] = o;
                };
              } else if (s.startsWith("update"))
                this.$parent.data = (h) => {
                  Object.keys(o).forEach((u) => {
                    h[u] = o[u];
                  });
                };
              else {
                let { getInternalObject: h } = this.$parent;
                h[s] && h[s](o);
              }
          }),
          r.methods(i),
          (this.view = r.view(i)),
          (this.getInternalObject = i),
          a(() => {
            let s = r.follow ? r.follow : [];
            s.length > 0 &&
              window.addEventListener("xtyleGlobalsUpdate", (o) => {
                let { namespace: h } = o.detail;
                s.includes(h) && this.render();
              });
          }),
          r.mounted.bind(i)();
      }
      get data() {
        return this.__dict__.state;
      }
      set data(t) {
        return this.__dict__.update(t);
      }
      render() {
        let t = V(...this.view())(this),
          e = I(this.$el, t);
        return (this.$el = e), e;
      }
      mount(t = null) {
        this.$root ? X(this.$root, this) : ((this.$root = t), X(t, this));
      }
      unmount() {
        this.$el.remove();
      }
    },
    _ = {
      [String]: "String",
      [Number]: "Number",
      [Function]: "Function",
      [Array]: "Array",
      [null]: "NULL",
      [Object]: "Object",
      [Boolean]: "Boolean",
      [void 0]: "UNDEFINED",
    },
    it = (n) =>
      typeof n == "string"
        ? { name: _[String], type: String }
        : typeof n == "number"
        ? { name: _[Number], type: Number }
        : typeof n == "boolean"
        ? { name: _[Boolean], type: Boolean }
        : typeof n == "function"
        ? { name: _[Function], type: Function }
        : typeof n == "object"
        ? Array.isArray(n)
          ? { name: _[Array], type: Array }
          : n === null
          ? { name: _[null], type: null }
          : { name: _[Object], type: Object }
        : { name: _[Function], type: void 0 };
  function st(n, t) {
    let e = t || {},
      r = {};
    return (
      Object.keys(n.props).forEach((a) => {
        let c = e[a],
          s = n.props[a].type,
          o = _[s];
        if (c && s !== Boolean) {
          s === String && (c = c.toString());
          let h = it(c);
          s === h.type ||
            (["Function", "Object", "Array"].includes(o)
              ? (c = n.props[a].default())
              : (c = n.props[a].default),
            console.error(`prop: { ${a} } is not of the value { ${o} }`));
        } else
          s === Boolean
            ? (c = c === void 0 ? null : c)
            : ["Function", "Object", "Array"].includes(o)
            ? (c = n.props[a].default())
            : (c = n.props[a].default);
        r[a] = c;
      }),
      Object.assign({}, { ...n.data, ...r })
    );
  }
  function at(n, t) {
    return (
      Object.keys(n.methods).forEach((e) => {
        let r = n.methods[e];
        t[e] = r.bind(t);
      }),
      t
    );
  }
  function ot(n, t) {
    return n.view.bind(t);
  }
  function ct(n) {
    let t = {
        follow: n.follow || [],
        sync: n.sync || {},
        props: n.props || {},
        data: n.data || {},
        methods: n.methods || {},
        view: n.view || function () {},
        components: n.components || {},
        mounted: n.mounted || function () {},
        init: n.init || function () {},
      },
      e = {};
    return (
      (e.__keys__ = Array.from(
        new Set([...Object.keys(t.props), ...Object.keys(t.data)])
      )),
      (e.__methods__ = Array.from(new Set(Object.keys(t.methods)))),
      (e.props = (r) => st(t, r)),
      (e.methods = (r) => at(t, r)),
      (e.view = (r) => ot(t, r)),
      (e.follow = t.follow),
      (e.sync = t.sync),
      (e.mounted = t.mounted),
      (e.init = t.init),
      e
    );
  }
  function M(n) {
    let t = ct(n),
      e = !1;
    function r(i) {
      let a = i || {},
        c = t.props(a),
        s = $.model(c),
        o = {};
      function h(l) {
        Object.defineProperty(o, l, {
          get: function () {
            return s.state[l];
          },
          set: function (p) {
            s.update((y) => (y[l] = p));
          },
        });
      }
      t.__keys__.forEach((l) => {
        h(l);
      }),
        (o.$slot = (l, p) => (a.$slot[l] ? a.$slot[l](p) : null)),
        (o.$update = (l) => s.update(l));
      let u = (l) => {
        e === !1 && ((e = !0), l(), t.init.bind(o)());
      };
      return new d({ component: t, internalObject: o, admin: s, init: u });
    }
    return r;
  }
  function F(n) {
    let t = {};
    return (
      n.forEach((e) => {
        t[e.name] = M(e);
      }),
      t
    );
  }
  var w = M;
  var ht = "xtyleGlobalsUpdate",
    E = class {
      constructor(t, e) {
        (this.key = t),
          (this.value = e),
          (this.left = null),
          (this.right = null),
          (this.height = 1);
      }
    },
    C = class {
      constructor() {
        (this.root = null), (this.__keys__ = new Set());
      }
      get keys() {
        return Array.from(this.__keys__);
      }
      create(t, e) {
        return (
          (this.root = this._insert(t, e, this.root)),
          this.__keys__.add(t),
          this
        );
      }
      _insert(t, e, r) {
        if (!r) return new E(t, e);
        t < r.key
          ? (r.left = this._insert(t, e, r.left))
          : (r.right = this._insert(t, e, r.right)),
          (r.height =
            1 + Math.max(this._height(r.left), this._height(r.right)));
        let i = this._getBalance(r);
        return i > 1 && t < r.left.key
          ? this._rotateRight(r)
          : i < -1 && t > r.right.key
          ? this._rotateLeft(r)
          : i > 1 && t > r.left.key
          ? ((r.left = this._rotateLeft(r.left)), this._rotateRight(r))
          : i < -1 && t < r.right.key
          ? ((r.right = this._rotateRight(r.right)), this._rotateLeft(r))
          : r;
      }
      read(t) {
        return this._find(t, this.root);
      }
      _find(t, e) {
        return e
          ? t === e.key
            ? e.value
            : t < e.key
            ? this._find(t, e.left)
            : this._find(t, e.right)
          : null;
      }
      _height(t) {
        return t ? t.height : 0;
      }
      _getBalance(t) {
        return t ? this._height(t.left) - this._height(t.right) : 0;
      }
      _rotateRight(t) {
        let { left: e } = t,
          r = e.right;
        return (
          (e.right = t),
          (t.left = r),
          (t.height =
            1 + Math.max(this._height(t.left), this._height(t.right))),
          (e.height =
            1 + Math.max(this._height(e.left), this._height(e.right))),
          e
        );
      }
      _rotateLeft(t) {
        let { right: e } = t,
          r = e.left;
        return (
          (e.left = t),
          (t.right = r),
          (t.height =
            1 + Math.max(this._height(t.left), this._height(t.right))),
          (e.height =
            1 + Math.max(this._height(e.left), this._height(e.right))),
          e
        );
      }
      update(t, e) {
        let r = this.root;
        for (; r; ) {
          if (t === r.key) return (r.value = e), !0;
          t < r.key ? (r = r.left) : (r = r.right);
        }
        return !1;
      }
      delete(t) {
        this.root = this._delete(t, this.root);
      }
      _delete(t, e) {
        if (!e) return null;
        if (t < e.key) e.left = this._delete(t, e.left);
        else if (t > e.key) e.right = this._delete(t, e.right);
        else {
          if (!e.left) return e.right;
          if (!e.right) return e.left;
          let i = this._findMinNode(e.right);
          (e.key = i.key),
            (e.value = i.value),
            (e.right = this._delete(i.key, e.right));
        }
        e.height = 1 + Math.max(this._height(e.left), this._height(e.right));
        let r = this._getBalance(e);
        return r > 1 && this._getBalance(e.left) >= 0
          ? this._rotateRight(e)
          : r > 1 && this._getBalance(e.left) < 0
          ? ((e.left = this._rotateLeft(e.left)), this._rotateRight(e))
          : r < -1 && this._getBalance(e.right) <= 0
          ? this._rotateLeft(e)
          : r < -1 && this._getBalance(e.right) > 0
          ? ((e.right = this._rotateRight(e.right)), this._rotateLeft(e))
          : e;
      }
      _findMinNode(t) {
        return t.left ? this._findMinNode(t.left) : t;
      }
    },
    b = new C();
  function lt(n, t) {
    Object.defineProperty(n, t, {
      get: function () {
        return n.$____state____$[t];
      },
      set: function (e) {
        n.$____update____$((r) => (r[t] = e));
      },
    });
  }
  var k = class {
    constructor(t, e) {
      let r = Object.keys(e),
        i = t.toLowerCase();
      (this.$____namespace____$ = i),
        (this.$____dict____$ = e),
        (this.$____keys____$ = r),
        b.create(i, e),
        r.forEach((a) => {
          lt(this, a);
        });
    }
    $redraw() {
      let { redraw: t } = window.$____XPRIVATEDICTX____$.router;
      t && t();
    }
    get $update() {
      return this.$____update____$;
    }
    get $store() {
      return b;
    }
    get $____state____$() {
      return b.read(this.$____namespace____$);
    }
    $____update____$(t) {
      let { data: e, update: r } = $.produce(this.$____dict____$, t);
      if (r) {
        let i = this.$____namespace____$;
        (this.$____dict____$ = e), b.update(i, e);
        let a = new CustomEvent(ht, { detail: { namespace: i } });
        window.dispatchEvent(a);
      }
    }
  };
  function ut(n, t) {
    return new k(n, t);
  }
  var W = ut;
  window.$____XPRIVATEDICTX____$ = {
    router: {},
    components: {},
    static: {},
    methods: {},
    vars: {},
    current: null,
  };
  var g = window.$____XPRIVATEDICTX____$,
    ft = w({
      props: { title: { type: String, default: "Oops!" } },
      view() {
        return [
          "div",
          { style: "text-align: center" },
          [
            ["h1", { style: "font-size: 8.5em" }, [this.title]],
            ["h3", {}, "404 | Page not Found."],
          ],
        ];
      },
    });
  function O(n) {
    return (n = "/" + n.replace(/^\/|\/$/g, "") + "/"), n;
  }
  function _t(n) {
    let t = new URLSearchParams(n),
      e = {};
    return (
      t.forEach((r, i) => {
        e[i] = r;
      }),
      e
    );
  }
  function pt(n, t) {
    let e = O(n),
      r = O(t),
      i = new RegExp(e.replace(/{(.*?)}/g, "([^/]+)")),
      a = r.match(i),
      c = {};
    if (a) {
      let s = e.match(/{(.*?)}/g);
      s &&
        s.forEach((o, h) => {
          c[o.slice(1, -1)] = a[h + 1];
        });
    }
    return c;
  }
  function mt(n, t) {
    let e = O(n),
      r = O(t);
    return new RegExp("^" + e.replace(/{(.*?)}/g, "([^/]+)") + "$").test(r);
  }
  function gt(n, t) {
    let e = Object.keys(n).filter((r) => mt(r, t));
    return e.length > 0 ? e[0] : "404";
  }
  function dt(n) {
    let t = n || {},
      e = t.root ? t.root : "#app",
      r = t.history ? t.history : !1,
      i = t.routes ? t.routes : {},
      a = t.components ? t.components : [],
      c = t.methods ? t.methods : {},
      s = t.static ? t.static : {},
      o = t.vars ? t.vars : {},
      h = null,
      u = null,
      l = null,
      p = null,
      y = {},
      T = {};
    r || window.location.hash || (window.location.hash = "/");
    let G = (f) => {
      let m = window.event;
      if (m)
        try {
          m.preventDefault && m.preventDefault(),
            m.stopPropagation && m.stopPropagation(),
            m.stopImmediatePropagation && m.stopImmediatePropagation();
        } catch (z) {}
      r ? window.history.pushState({}, "", f) : (window.location.hash = f), j();
    };
    async function j() {
      (p = r ? window.location.pathname : window.location.hash.slice(1)),
        (l = gt(i, p));
      let f = p.split("?");
      (y = pt(l, f[0])),
        f.length > 1 && (T = _t(f[1])),
        (u = i[l] || i[404] || ft),
        h && h.unmount(),
        u && ((h = u()), h.mount(e), (g.current = h));
    }
    function K() {
      h.render();
    }
    window.onpopstate = j;
    let L = { go: (f) => G(f), redraw: () => K() };
    return (
      Object.defineProperty(L, "current", {
        get: function () {
          return Object.freeze({ route: l, path: p, args: y, query: T });
        },
      }),
      (g.components = F(a)),
      (g.router = L),
      (g.methods = c),
      (g.static = s),
      (g.vars = o),
      Object.keys(o).forEach((f) => {
        g.vars[f] = W(f, o[f]);
      }),
      j(),
      window.$____XPRIVATEDICTX____$
    );
  }
  var U = dt;
  var yt = { h: w, app: U };
  return Z($t);
})().default;
